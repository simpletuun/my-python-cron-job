name: CFETS Sentiment Data Collector

on:
  schedule:
    # 北京时间 08:46, 10:16, 14:31, 16:01 (UTC时间减去8小时)
    # 仅限周一到周五 (1-5)，因为周末可能没有数据
    - cron: '46 0 * * 1-5'   # 每天 UTC 00:46 (北京 08:46)
    - cron: '16 2 * * 1-5'   # 每天 UTC 02:16 (北京 10:16)
    - cron: '31 6 * * 1-5'   # 每天 UTC 06:31 (北京 14:31)
    - cron: '1 8 * * 1-5'    # 每天 UTC 08:01 (北京 16:01)
  workflow_dispatch:

env:
  GITHUB_ACTIONS: true

jobs:
  collect-data:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
        echo "Chrome version: $CHROME_VERSION"
        wget -N https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%.*}
        CHROMEDRIVER_VERSION=$(cat LATEST_RELEASE_${CHROME_VERSION%.*})
        wget -N https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
        sudo unzip -o chromedriver_linux64.zip -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium==4.15.0 schedule

    - name: Setup email configuration
      run: |
        echo "EMAIL_CONFIG='{\"smtp_server\": \"${{ secrets.SMTP_SERVER }}\", \"smtp_port\": ${{ secrets.SMTP_PORT }}, \"sender_email\": \"${{ secrets.SENDER_EMAIL }}\", \"sender_password\": \"${{ secrets.SENDER_PASSWORD }}\"}'" >> $GITHUB_ENV

    - name: Create Python script for execution
      run: |
        cat > run_spider.py << 'EOF'
import os
import sys
from datetime import datetime

# 添加当前目录到 Python 路径
sys.path.append(os.getcwd())

try:
    from cfets_spider import CFETSScheduledSpider
    
    # 获取当前时间
    current_time = sys.argv[1] if len(sys.argv) > 1 else None
    
    spider = CFETSScheduledSpider()
    spider.setup_email_config(
        sender_email=os.environ.get('SENDER_EMAIL'),
        sender_password=os.environ.get('SENDER_PASSWORD'),
        smtp_server=os.environ.get('SMTP_SERVER'),
        smtp_port=int(os.environ.get('SMTP_PORT', '587'))
    )
    
    if current_time:
        print(f'检测到北京时间: {current_time}')
        if current_time == '08:46':
            spider.job_0846()
        elif current_time == '10:16':
            spider.job_1016()
        elif current_time == '14:31':
            spider.job_1431()
        elif current_time == '16:01':
            spider.job_1601()
        else:
            print(f'当前时间 {current_time} 不在预定任务时间内，执行测试模式')
            result = spider.test_now()
            if not result:
                sys.exit(1)
    else:
        print('执行测试模式（无时间参数）')
        result = spider.test_now()
        if not result:
            sys.exit(1)
            
except ImportError as e:
    print(f"导入错误: {e}")
    print("当前工作目录:", os.getcwd())
    print("目录内容:", os.listdir('.'))
    if 'cfets_spider.py' not in os.listdir('.'):
        print("错误: cfets_spider.py 文件不存在")
    sys.exit(1)
except Exception as e:
    print(f"执行错误: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
EOF

    - name: Run CFETS Spider
      run: |
        CURRENT_HOUR=$(date -u +%H)
        CURRENT_MINUTE=$(date -u +%M)
        echo "当前UTC时间: $CURRENT_HOUR:$CURRENT_MINUTE"
        BEIJING_HOUR=$((10#$CURRENT_HOUR + 8))
        if [ $BEIJING_HOUR -ge 24 ]; then
          BEIJING_HOUR=$((BEIJING_HOUR - 24))
        fi
        BEIJING_HOUR=$(printf "%02d" $BEIJING_HOUR)
        BEIJING_TIME="$BEIJING_HOUR:$CURRENT_MINUTE"
        echo "对应北京时间: $BEIJING_TIME"
        
        python run_spider.py "$BEIJING_TIME"
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}

    - name: Commit and push data
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add sentiment_data_*.json
        if [ -z "$(git diff --cached --name-only)" ]; then
          echo "没有新的数据文件需要提交"
        else
          git commit -m "Auto-update: CFETS sentiment data for $(date +%Y%m%d)"
          git push
          echo "数据文件已提交并推送"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
